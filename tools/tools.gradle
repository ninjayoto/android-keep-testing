apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.7.1.201405082137'
}

afterEvaluate { project ->

    project.android.buildTypes.each { buildType ->

        task "create${buildType.name.capitalize()}CoverageUnitReport"(type: JacocoReport, dependsOn: "test${buildType.name.capitalize()}UnitTest") {
            group = 'verification'

            reports {
                xml.enabled = true
                html.enabled = true
                html.destination "$buildDir/reports/jacoco/${buildType.name}UnitTest"
            }

            jacocoClasspath = configurations['androidJacocoAnt']

            sourceDirectories = files("$projectDir/src/main/java")
            classDirectories = fileTree(dir: "$buildDir/intermediates/classes/${buildType.name}",
                    excludes: ['android/**/*.*', '**/R.class', '**/R$*.class', '**/BuildConfig.*'])
            executionData = files("$buildDir/jacoco/test${buildType.name.capitalize()}UnitTest.exec")
        }
    }

    project.android.buildTypes.each { buildType ->

        task "create${buildType.name.capitalize()}UnifiedCoverageReport"(type: JacocoReport, dependsOn: ["test${buildType.name.capitalize()}UnitTest",
                                                                                                         "create${buildType.name.capitalize()}CoverageReport"]) {
            group = 'verification'

            reports {
                xml.enabled = true
                html.enabled = true
                html.destination "$buildDir/reports/jacoco/${buildType.name}Unified"
            }

            jacocoClasspath = configurations['androidJacocoAnt']

            sourceDirectories = files("$projectDir/src/main/java")
            classDirectories = fileTree(dir: "$buildDir/intermediates/classes/${buildType.name}",
                    excludes: ['android/**/*.*', '**/R.class', '**/R$*.class', '**/BuildConfig.*'])
            executionData = files("$buildDir/jacoco/test${buildType.name.capitalize()}UnitTest.exec",
                    "${buildDir}/outputs/code-coverage/connected/coverage.ec")
        }
    }
}